{"ast":null,"code":"var _jsxFileName = \"/Users/lukasc/notes-app/notes-app-ui/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNote] = useState(null);\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/notes\");\n        const notes = await response.json();\n        setNotes(notes);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchNotes();\n  }, []);\n  const handleNoteClick = note => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n  const handleAddNote = event => {\n    event.preventDefault();\n    setNotes([newNote, ...notes]);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n  const handleUpdateNote = event => {\n    event.preventDefault();\n    if (!selectedNote) {\n      return;\n    }\n    const updatedNote = {\n      id: selectedNote.id,\n      title: title,\n      content: content\n    };\n    const updatedNotesList = notes.map(note => note.id === selectedNote.id ? updatedNote : note);\n    setNotes(updatedNotesList);\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n  const handleCancel = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n  const deleteNote = (event, noteId) => {\n    event.stopPropagation();\n    const updatedNotes = notes.filter(note => note.id !== noteId);\n    setNotes(updatedNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      onSubmit: event => selectedNote ? handleUpdateNote(event) : handleAddNote(event),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: event => setTitle(event.target.value),\n        placeholder: \"title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: event => setContent(event.target.value),\n        placeholder: \"Content\",\n        rows: 10,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), selectedNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        onClick: () => handleNoteClick(note),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => deleteNote(event, note.id),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"VB1fkClPu3jlvzuJZF8O8L7W3ug=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","notes","setNotes","title","setTitle","content","setContent","selectedNote","setSelectedNote","fetchNotes","response","fetch","json","error","console","log","handleNoteClick","note","handleAddNote","event","preventDefault","newNote","handleUpdateNote","updatedNote","id","updatedNotesList","map","handleCancel","deleteNote","noteId","stopPropagation","updatedNotes","filter","className","children","onSubmit","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","onClick","_c","$RefreshReg$"],"sources":["/Users/lukasc/notes-app/notes-app-ui/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\"\n\ntype Note = {\n  id: number;\n  title: string;\n  content: string;\n}\n\n\nconst App = () => {\n  const [notes, setNotes] = useState\n    <Note[]>([]);\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [selectedNote, setSelectedNote] = \n  useState<Note | null>(null);\n\n  useEffect(()=> {\n    const fetchNotes = async ()=>{\n      try {\n        const response = \n          await fetch(\"http://localhost:5000/api/notes\");\n        \n          const notes: Note[] = await response.json();\n\n          setNotes(notes);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchNotes();\n  }, []);\n\n  const handleNoteClick = (note:Note) => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  }\n\n  const handleAddNote = (\n    event: React.FormEvent\n  ) => {\n    event.preventDefault();\n    \n\n  \n\n    setNotes([newNote, ...notes]);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n\n  const handleUpdateNote = (\n    event: React.FormEvent\n  ) => {\n    event.preventDefault();\n\n    if(!selectedNote){\n      return;\n    }\n\n    const updatedNote: Note = {\n      id: selectedNote.id,\n      title: title,\n      content: content,\n    }\n\n    const updatedNotesList = notes.map((note)=>\n      note.id === selectedNote.id\n        ? updatedNote\n        : note\n    )\n\n    setNotes(updatedNotesList)\n    setTitle(\"\")\n    setContent(\"\")\n    setSelectedNote(null);\n  };\n\n  const handleCancel = () => {\n    setTitle(\"\")\n    setContent(\"\")\n    setSelectedNote(null);\n  };\n\n\n  const deleteNote = (\n    event: React.MouseEvent,\n    noteId: number\n  ) => {\n    event.stopPropagation();\n\n    const updatedNotes = notes.filter(\n      (note)=> note.id !== noteId\n    )\n\n    setNotes(updatedNotes);\n  };\n\n  return(\n  <div className=\"app-container\">\n    <form\n      className=\"note-form\"\n      onSubmit={(event) => \n        selectedNote\n          ? handleUpdateNote(event)\n          : handleAddNote(event)\n      }\n    >\n      <input\n        value = {title}\n        onChange={(event) =>\n          setTitle(event.target.value)\n        } \n        placeholder=\"title\"\n        required\n      ></input>\n      <textarea\n        value={content}\n          onChange={(event) =>\n            setContent(event.target.value)\n          } \n        placeholder=\"Content\"\n        rows={10}\n        required\n      ></textarea>\n\n      {selectedNote ? (\n        <div className=\"edit-buttons\">\n          <button type=\"submit\">Save</button>\n          <button onClick={handleCancel}>\n              Cancel\n            </button>\n        </div>\n      ) : (\n        <button type=\"submit\">Add Note</button>\n      )}\n    </form>\n    <div className=\"notes-grid\">\n      {notes.map((note) => (\n        <div className=\"note-item\"\n          onClick={()=> handleNoteClick(note)}\n        >\n        <div className=\"notes-header\">\n          <button\n            onClick={(event) =>\n              deleteNote(event, note.id)\n            }\n          >\n            x\n          </button>\n        </div>\n        <h2>{note.title}</h2>\n        <p>{note.content}</p>\n      </div>\n      ))}\n    </div>\n  </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}